#!/bin/bash

set -Eeo pipefail
if [[ ! -f ./releaser ]];then
  wget --quiet http://http.archive.ai-traders.com/releaser/1.1.0/releaser || { echo "Cannot download realeser, ignoring"; }
fi
if [[ -f ./releaser ]];then
  source ./releaser
fi

command="$1"
case "${command}" in
  set_version)
      if [[ -n "$2" ]]; then
        next_version="$2"
      else
        version=$(releaser::get_last_version_from_whole_changelog "${changelog_file}")
        next_version=$(releaser::bump_patch_version "${version}")
      fi
      releaser::set_version_in_changelog "${changelog_file}" "${next_version}"
      exit $?
      ;;
  verify_version)
      releaser::verify_changelog_version
      exit $?
      ;;
  test)
      time bats --pretty ./test/integration/
      exit $?
      ;;
  release)
      ./tasks verify_version
      version=$(releaser::get_last_version_from_whole_changelog "${changelog_file}")
      git tag "${version}" && git push origin "${version}"
      ;;
  release_gh)
      if [ -z "$GITHUB_TOKEN" ]; then echo "GITHUB_TOKEN is unset"; exit 1; fi
      version="$(get_last_version_from_whole_changelog ${changelog_file})"
      git remote add upstream git@github.com:ai-traders/dojo-init.git
      git pull upstream master
      git push --tags upstream master
      ide --idefile Idefile.nodejs "sudo npm install --global release-it && release-it --verbose --increment=${version} --non-interactive"
      ;;
  generate_release_notes)
      version=${2?version not set}
      changelog="CHANGELOG.md"
      start_line_number=$(awk "/${version}/{ print NR; exit }" ${changelog})
      # now let's read the file, line by line, starting from start_line_number+1
      # up to "###" or the end of file
      line_read=0
      while read line; do
          line_read=$((line_read+1))
          if [ "${line_read}" -gt "${start_line_number}" ]; then
            if [[ "${line}" == "### "* ]]; then
                # stop reading
                exit 0
            fi
            echo "${line}"
          fi
      done < "${changelog}"
      ;;
  *)
      echo "Invalid command: '${command}'"
      exit 1
      ;;
esac
set +e
